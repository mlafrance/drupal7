<?php

define('MIDDLEBURY_PROMOCAL_MODULE_PATH', drupal_get_path('module', 'middlebury_promocal'));

/**
 * Implements hook_node_info().
 */
function middlebury_promocal_node_info() {
  return array(
    'promocal' => array(
      'name' => t('Promotional Calendar'),
      'base' => 'middlebury_promocal',
      'description' => t('Embed a Promotional Calendar in a content page.'),
      'title_label' => t('Title'),
      'locked' => TRUE,
    ),
  );
}

/**
 * Implements hook_node_type_insert().
 */
function middlebury_promocal_node_type_insert($content_type) {
  if ($content_type->type == 'promocal') {
    $fields = array(
      'promocal_webname' => array(
        'field_name' => 'promocal_webname',
        'type' => 'text',
        'cardinality' => 1,
      ),
      'promocal_spudtype' => array(
        'field_name' => 'promocal_spudtype',
        'type' => 'text',
        'cardinality' => 1,
      ),
      'promocal_teaserbase' => array(
        'field_name' => 'promocal_teaserbase',
        'type' => 'text',
        'cardinality' => 1,
      ),
    );

    $instances = array(
      'promocal_webname' => array(
        'field_name' => 'promocal_webname',
        'label' => 'webName',
        'entity_type' => 'node',
        'bundle' => 'promocal',
        'required' => TRUE,
        'widget' => array(
          'type' => 'text_textfield',
        ),
      ),
      'promocal_spudtype' => array(
        'field_name' => 'promocal_spudtype',
        'label' => 'spudType',
        'entity_type' => 'node',
        'bundle' => 'promocal',
        'required' => TRUE,
        'widget' => array(
          'type' => 'text_textfield',
        ),
      ),
      'promocal_teaserbase' => array(
        'field_name' => 'promocal_teaserbase',
        'label' => 'teaserbase',
        'entity_type' => 'node',
        'bundle' => 'promocal',
        'required' => FALSE,
        'widget' => array(
          'type' => 'text_textfield',
        ),
      ),
    );

    foreach ($fields as $field) {
      field_create_field($field);
    }

    foreach ($instances as $instance) {
      field_create_instance($instance);
    }
  }
}

/**
 * Implements hook_form().
 */
function middlebury_promocal_form($node, $form_state) {
  return node_content_form($node, $form_state);
}

/**
 * Implements hook_theme_registry_alter().
 */
function middlebury_promocal_theme_registry_alter(&$theme_registry) {
  $theme_registry_copy = $theme_registry;
  _theme_process_registry($theme_registry_copy, 'phptemplate', 'theme_engine', 'middlebury_promocal_theme', MIDDLEBURY_PROMOCAL_MODULE_PATH);

  $theme_registry += array_diff_key($theme_registry_copy, $theme_registry);

  $hooks = array('node');
  foreach ($hooks as $h) {
    if (!isset($theme_registry[$h]['theme paths'])) {
      $theme_registry[$h]['theme paths'] = array();
    }

    if (is_array($theme_registry[$h]['theme paths'])) {
      $first_element = array_shift($theme_registry[$h]['theme paths']);
      if ($first_element) {
        array_unshift($theme_registry[$h]['theme paths'], $first_element, MIDDLEBURY_PROMOCAL_MODULE_PATH);
      }
      else {
        array_unshift($theme_registry[$h]['theme paths'], MIDDLEBURY_PROMOCAL_MODULE_PATH);
      }
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function middlebury_promocal_preprocess_node(&$vars) {
  if ($vars['node']->type == 'promocal') {
    drupal_add_css(MIDDLEBURY_PROMOCAL_MODULE_PATH . '/middlebury_promocal.css');

    $wrapper = $vars['node'];
    try {
      $wrapper = entity_metadata_wrapper('node', $vars['node']);
    } catch (UnexpectedValueException $e) {
    }

    $pattern = "/[^a-zA-Z0-9\.\*#>\+~:\[\]\(\)\-_=;&,!\^$|\/\s]/";
    $vars['webname'] = preg_replace($pattern, "", $wrapper->promocal_webname->value());
    $vars['spudtype'] = preg_replace($pattern, "", $wrapper->promocal_spudtype->value());
    $vars['teaserbase'] = preg_replace($pattern, "", $wrapper->promocal_teaserbase->value());
  }
}